#Exercicio 1 - Dado a sequência de Fibonacci, onde se inicia por 0 e 1 e o \
# próximo valor sempre será a soma dos 2 valores anteriores (exemplo: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34...), \
# escreva um programa na linguagem que desejar onde, informado um número, \
# ele calcule a sequência de Fibonacci e retorne uma mensagem avisando se o número informado pertence ou não a sequência.

def fibonacci(i):
    sequence = [0, 1]
    while sequence[-1] < i:
        sequence.append(sequence[-2] + sequence[-1])
    return sequence

def sequencia_fibonacci(i):
    sequencia_fib = fibonacci(i)
    if i in sequencia_fib:
        return f"O número {i} pertence à sequência de Fibonacci."
    else:
        return f"O número {i} não pertence à sequência de Fibonacci."

num = int(input("Informe um número: "))
print(sequencia_fibonacci(num))

'''**************************'''
#Exercicio 2 - Escreva um programa que verifique, em uma string, a existência da letra ‘a’, \
# seja maiúscula ou minúscula, além de informar a quantidade de vezes em que ela ocorre.

def count(str):
    count = 0
    for char in str:
        if char.lower() == 'a':
            count += 1
    if count > 0:
        return f"A letra 'a' existe na string e ocorre {count} vezes."
    else:
        return "A letra 'a' não existe na string."

string = input("Digite uma frase: ")
print(count(string))

'''**************************'''
#Exercicio 3 - Observe o trecho de código abaixo: int INDICE = 12, SOMA = 0, K = 1; \
# enquanto K < INDICE faça { K = K + 1; SOMA = SOMA + K; } imprimir(SOMA); \
# Ao final do processamento, qual será o valor da variável SOMA?

indice = 12
soma = 0
k = 1

while k < indice:
    k += 1
    soma += k

print(soma)

'''**************************'''
#Exercicio 4 - Descubra a lógica e complete o próximo elemento:
# a) 1, 3, 5, 7, ___
# b) 2, 4, 8, 16, 32, 64, ____
# c) 0, 1, 4, 9, 16, 25, 36, ____
# d) 4, 16, 36, 64, ____
# e) 1, 1, 2, 3, 5, 8, ____
# f) 2,10, 12, 16, 17, 18, 19, ____ 

def proximo_elemento_a():
    sequencia = [1, 3, 5, 7]
    prox_num = sequencia[-1] + 2
    return prox_num

print("a) Próximo elemento:", proximo_elemento_a())

def proximo_elemento_b():
    sequencia = [2, 4, 8, 16, 32, 64]
    prox_num = sequencia[-1] * 2
    return prox_num

print("b) Próximo elemento:", proximo_elemento_b())

def proximo_elemento_c():
    sequencia = [0, 1, 4, 9, 16, 25, 36]
    prox_num = (len(sequencia) + 1) ** 2
    return prox_num

print("c) Próximo elemento:", proximo_elemento_c())

def proximo_elemento_d():
    sequencia = [4, 16, 36, 64]
    prox_num = (len(sequencia) + 2) ** 2
    return prox_num

print("d) Próximo elemento:", proximo_elemento_d())

def proximo_elemento_e():
    sequencia = [1, 1, 2, 3, 5, 8]
    prox_num = sequencia[-1] + sequencia[-2]
    return prox_num

print("e) Próximo elemento:", proximo_elemento_e())

def proximo_elemento_f():
    sequencia = [2, 10, 12, 16, 17, 18, 19]
    incremento = [8, 2, 4, 1, 1]
    prox_incremento = incremento[-1] + 1
    prox_num = sequencia[-1] + prox_incremento
    return prox_num

print("f) Próximo elemento:", proximo_elemento_f())

'''**************************'''
#Exercicio 5 -Você está em uma sala com três interruptores, cada um conectado a uma lâmpada em salas diferentes.\
# Você não pode ver as lâmpadas da sala em que está, mas pode ligar e desligar os interruptores quantas vezes quiser.\
# Seu objetivo é descobrir qual interruptor controla qual lâmpada. Como você faria para descobrir, \
# usando apenas duas idas até uma das salas das lâmpadas, qual interruptor controla cada lâmpada? 

class Lampada:
    def __init__(self, nome):
        self.nome = nome
        self.acesa = False
        self.quente = False

    def ligar(self):
        self.acesa = True

    def desligar(self):
        self.acesa = False

    def aquecer(self):
        self.quente = True

    def esfriar(self):
        self.quente = False

class Interruptor:
    def __init__(self, nome, lampada):
        self.nome = nome
        self.lampada = lampada

    def ligar(self):
        self.lampada.ligar()

    def desligar(self):
        self.lampada.desligar()

lampada1 = Lampada("Lâmpada 1")
lampada2 = Lampada("Lâmpada 2")
lampada3 = Lampada("Lâmpada 3")

interruptor1 = Interruptor("Interruptor 1", lampada1)
interruptor2 = Interruptor("Interruptor 2", lampada2)
interruptor3 = Interruptor("Interruptor 3", lampada3)

# Passo 1
interruptor1.ligar()
interruptor1.desligar()
interruptor2.ligar()

# Passo 2
print("Verifique as lâmpadas:")
if lampada1.acesa:
    print("Lâmpada 1 está acesa")
elif lampada1.quente:
    print("Lâmpada 1 está quente")
else:
    print("Lâmpada 1 está fria e desligada")

if lampada2.acesa:
    print("Lâmpada 2 está acesa")
elif lampada2.quente:
    print("Lâmpada 2 está quente")
else:
    print("Lâmpada 2 está fria e desligada")

if lampada3.acesa:
    print("Lâmpada 3 está acesa")
elif lampada3.quente:
    print("Lâmpada 3 está quente")
else:
    print("Lâmpada 3 está fria e desligada")

# Passo 3
interruptor2.desligar()
interruptor3.ligar()

# Passo 4
print("Verifique as lâmpadas novamente:")
if lampada1.acesa:
    print("Lâmpada 1 está acesa")
elif lampada1.quente:
    print("Lâmpada 1 está quente")
else:
    print("Lâmpada 1 está fria e desligada")

if lampada2.acesa:
    print("Lâmpada 2 está acesa")
elif lampada2.quente:
    print("Lâmpada 2 está quente")
else:
    print("Lâmpada 2 está fria e desligada")

if lampada3.acesa:
    print("Lâmpada 3 está acesa")
elif lampada3.quente:
    print("Lâmpada 3 está quente")
else:
    print("Lâmpada 3 está fria e desligada")

print('Então, a solução final é:\
      Interruptor 1: controla lâmpada 1 \
      Interruptor 2: controla lâmpada 2 \
      Interruptor 3: controla lâmpada 3')

# Essa solução funciona porque:
# Ao ligar o interruptor 1 por 5 minutos, você garante que a lâmpada correspondente esteja quente, mesmo que esteja desligada.
# Ao desligar o interruptor 1 e ligar o interruptor 2, você pode identificar a lâmpada controlada pelo interruptor 2.
# Ao desligar o interruptor 2 e ligar o interruptor 3, você pode identificar a lâmpada controlada pelo interruptor 3.

#Solução final:
# Interruptor 1: Lâmpada 1
# Interruptor 2: Lâmpada 2
# Interruptor 3: Lâmpada 3
